{"version":3,"file":"hds-anchored-position.js","sources":["../../src/modifiers/hds-anchored-position.js"],"sourcesContent":["import { modifier } from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\nimport {\n  autoUpdate,\n  computePosition,\n  offset,\n  flip,\n  shift,\n  limitShift,\n  autoPlacement,\n  arrow,\n  // ---\n  // this could be used in the future if we want to give consumers an option to hide the \"floating\" element when the \"anchor\" hides from the viewport\n  // see: https://floating-ui.com/docs/hide\n  // hide,\n  // ---\n  // this could be used in the future if we want to give consumers an option to:\n  // - let the \"floating\" element auto-resize when there is not enough space (usually vertical) in the viewport to contain the entire \"floating\" element\n  // - let the \"floating\" element match the width of the \"trigger\" (it may have min/max width/heigh via CSS too)\n  // see: https://floating-ui.com/docs/size\n  // notice: below you can find a preliminary code implementation that was tested and worked relatively well\n  // size,\n  // ---\n} from '@floating-ui/dom';\n\nexport const DEFAULT_PLACEMENT = 'bottom';\nexport const PLACEMENTS = [\n  'top',\n  'top-start',\n  'top-end',\n  'right',\n  'right-start',\n  'right-end',\n  'bottom',\n  'bottom-start',\n  'bottom-end',\n  'left',\n  'left-start',\n  'left-end',\n];\n\n// we use this function to process all the options provided to the modifier in a single place,\n// in relation to the Floating UI APIs, and keep the modifier code more clean/simple\nexport const getFloatingUIOptions = (options) => {\n  let {\n    placement = DEFAULT_PLACEMENT,\n    strategy = 'absolute', // we don't need to use `fixed` if we use the Popover API for the \"floating\" element (it puts the element in the `top-layer`)\n    offsetOptions,\n    flipOptions = { padding: 8 },\n    shiftOptions = { padding: 8, limiter: limitShift() },\n    autoPlacementOptions = { padding: 8 },\n    middlewareExtra = [],\n    enableCollisionDetection,\n    arrowOptions,\n  } = options;\n\n  // we build dynamically the list of middleware functions to invoke, depending on the options provided\n\n  const middleware = [];\n\n  // https://floating-ui.com/docs/offset\n  middleware.push(offset(offsetOptions));\n\n  // https://floating-ui.com/docs/flip\n  // https://floating-ui.com/docs/shift\n  // https://floating-ui.com/docs/autoPlacement\n  if (\n    enableCollisionDetection === true ||\n    enableCollisionDetection === 'flip'\n  ) {\n    middleware.push(flip(flipOptions));\n  }\n  if (\n    (enableCollisionDetection === true) |\n    (enableCollisionDetection === 'shift')\n  ) {\n    middleware.push(shift(shiftOptions));\n  }\n  if (enableCollisionDetection === 'auto') {\n    middleware.push(autoPlacement(autoPlacementOptions));\n  }\n\n  // https://floating-ui.com/docs/arrow\n  if (arrowOptions) {\n    middleware.push(\n      // options: { element, padding }\n      arrow(arrowOptions)\n    );\n  }\n\n  // TODO? commenting this for now, will need to make this conditional to some argument (and understand how this relates to the `@height` argument)\n  // https://floating-ui.com/docs/size#match-reference-width\n  // size({\n  //   apply({ rects, elements }) {\n  //     Object.assign(elements.floating.style, {\n  //       width: `${rects.reference.width}px`,\n  //     });\n  //   },\n  // });\n  // size({\n  //   apply: ({ availableWidth, availableHeight, middlewareData }) => {\n  //     middlewareData.size = { availableWidth, availableHeight };\n  //   },\n  // }),\n\n  middleware.push(...middlewareExtra);\n\n  return {\n    placement,\n    strategy,\n    middleware,\n  };\n};\n\n// Notice: we use a function-based modifier here instead of a class-based one\n// because it's quite simple in its logic, and doesn't require injecting services\n// see: https://github.com/ember-modifier/ember-modifier#function-based-modifiers\n\nexport default modifier((element, positional, named = {}) => {\n  // the element that \"floats\" next to the \"anchor\" (whose position is calculated in relation to the anchor)\n  // notice: this is the element the Ember modifier is attached to\n  const floatingElement = element;\n\n  // the element that acts as an \"anchor\" for the \"floating\" element\n  // it can be a DOM (string) selector or a DOM element\n  // notice: it's expressed as \"positional\" argument (array of arguments) for the modifier\n  const _anchorTarget = positional[0];\n  const anchorElement =\n    typeof _anchorTarget === 'string'\n      ? document.querySelector(_anchorTarget)\n      : _anchorTarget;\n\n  assert(\n    '`hds-anchored-position` modifier - the provided \"anchoring\" element is not defined correctly',\n    anchorElement instanceof HTMLElement || anchorElement instanceof SVGElement\n  );\n\n  // the \"arrow\" element (optional) associated with the \"floating\" element\n  // it can be a DOM selector (string) or a DOM element\n  // notice: it's declared inside the \"named\" argument (object) for the modifier\n  // but we need to extract it also here so it can be used to assign inline styles to it\n  let arrowElement;\n  if (named?.arrowOptions?.element) {\n    assert(\n      '`hds-anchored-position` modifier - the `element` provided for the \"arrow\" element is not a valid DOM node',\n      named.arrowOptions.element instanceof HTMLElement ||\n        named.arrowOptions.element instanceof SVGElement\n    );\n\n    arrowElement = named.arrowOptions.element;\n  } else if (named?.arrowOptions?.selector) {\n    assert(\n      '`hds-anchored-position` modifier - the `selector` provided for the \"arrow\" element must be a string',\n      typeof named.arrowOptions.selector === 'string'\n    );\n\n    arrowElement = document.querySelector(named.arrowOptions.selector);\n\n    assert(\n      '`hds-anchored-position` modifier - the `selector` provided for the \"arrow\" element is not a valid DOM selector',\n      arrowElement\n    );\n\n    // for the the `getFloatingUIOptions` we always want to provide the element, not the selector\n    named.arrowOptions.element = arrowElement;\n  }\n\n  // the Floating UI \"options\" to apply to the \"floating\" element\n  // notice: it's expressed as \"named\" argument (object) for the modifier\n  const floatingOptions = getFloatingUIOptions(named);\n\n  const computeFloatingPosition = async () => {\n    // important to know: `computePosition()` is not stateful, it only positions the \"floating\" element once\n    // see: https://floating-ui.com/docs/computePosition\n    const state = await computePosition(\n      anchorElement,\n      floatingElement,\n      floatingOptions\n    );\n\n    let { x, y, placement, strategy, middlewareData } = state;\n\n    Object.assign(floatingElement.style, {\n      position: strategy,\n      top: `${y}px`,\n      left: `${x}px`,\n      // TODO? commenting this for now, will need to make this conditional to some argument (and understand how this relates to the `@height` argument)\n      // maxHeight: `${middlewareData.size.availableHeight - 10}px`,\n    });\n\n    if (arrowElement && middlewareData.arrow) {\n      // we assign a \"data\" attribute to the \"arrow\" element so we can use CSS (in the consuming components) to position/rotate it accordingly and we avoid calculating at runtime values that technically we already know\n      // (similar to what Tippy.js does: https://github.com/atomiks/tippyjs/blob/master/src/scss/svg-arrow.scss)\n      // IMPORTANT: floating-ui assumes the \"arrow\" container is square!\n      arrowElement.setAttribute('data-hds-anchored-arrow-placement', placement);\n\n      // we set `x` or `y` value (depends on the position of the arrow in relation to the \"floating\" element placement)\n      // see: https://floating-ui.com/docs/arrow#usage\n      Object.assign(arrowElement.style, {\n        left:\n          middlewareData.arrow.x != null ? `${middlewareData.arrow.x}px` : '',\n        top:\n          middlewareData.arrow.y != null ? `${middlewareData.arrow.y}px` : '',\n      });\n    }\n  };\n\n  // the `autoUpdate` function automatically updates the position of the floating element when necessary.\n  // it should only be called when the floating element is mounted on the DOM or visible on the screen.\n  // it returns a \"cleanup\" function that should be invoked when the floating element is removed from the DOM or hidden from the screen.\n  // see: https://floating-ui.com/docs/autoUpdate\n  const cleanupFloatingUI = autoUpdate(\n    anchorElement,\n    floatingElement,\n    computeFloatingPosition\n  );\n\n  // this (teardown) function is run when the element is removed from the DOM\n  return () => {\n    cleanupFloatingUI();\n  };\n});\n"],"names":["DEFAULT_PLACEMENT","PLACEMENTS","getFloatingUIOptions","options","placement","strategy","offsetOptions","flipOptions","padding","shiftOptions","limiter","limitShift","autoPlacementOptions","middlewareExtra","enableCollisionDetection","arrowOptions","middleware","push","offset","flip","shift","autoPlacement","arrow","modifier","element","positional","named","floatingElement","_anchorTarget","anchorElement","document","querySelector","assert","HTMLElement","SVGElement","arrowElement","selector","floatingOptions","computeFloatingPosition","state","computePosition","x","y","middlewareData","Object","assign","style","position","top","left","setAttribute","cleanupFloatingUI","autoUpdate"],"mappings":"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"}