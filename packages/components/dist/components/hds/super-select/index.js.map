{"version":3,"file":"index.js","sources":["../../../../src/components/hds/super-select/index.hbs","../../../../src/components/hds/super-select/index.js"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n\\n{{! NOTE: naming is temporary to not conflict with existing power-select wrapper }}\\n<div class={{this.classNames}}>\\n  {{! temp notes...\\n    Required:\\n    * onChange\\n    * options or search\\n  }}\\n\\n  {{#if (eq this.selectionType \\\"single\\\")}}\\n    <PowerSelect\\n      @afterOptionsComponent={{@afterOptionsComponent}}\\n      @ariaDescribedBy={{@ariaDescribedBy}}\\n      @ariaInvalid={{@ariaInvalid}}\\n      @ariaLabel={{@ariaLabel}}\\n      @ariaLabelledBy={{@ariaLabelledBy}}\\n      @beforeOptionsComponent={{@beforeOptionsComponent}}\\n      @disabled={{@disabled}}\\n      @groupComponent={{@groupComponent}}\\n      @initiallyOpened={{@initiallyOpened}}\\n      @labelText={{@labelText}}\\n      @matchTriggerWidth={{@matchTriggerWidth}}\\n      @noMatchesMessage={{@noMatchesMessage}}\\n      @onChange={{@onChange}}\\n      @onInput={{@onInput}}\\n      @options={{@options}}\\n      @placeholder={{@placeholder}}\\n      @renderInPlace={{true}}\\n      @resultCountMessage={{@resultCountMessage}}\\n      @search={{@search}}\\n      @searchEnabled={{@searchEnabled}}\\n      @searchPlaceholder={{@searchPlaceholder}}\\n      @selected={{@selected}}\\n      @verticalPosition={{@verticalPosition}}\\n      ...attributes\\n      as |option|\\n    >\\n      {{yield option}}\\n    </PowerSelect>\\n  {{else}}\\n    <PowerSelectMultiple\\n      @afterOptionsComponent={{@afterOptionsComponent}}\\n      @ariaDescribedBy={{@ariaDescribedBy}}\\n      @ariaInvalid={{@ariaInvalid}}\\n      @ariaLabel={{@ariaLabel}}\\n      @ariaLabelledBy={{@ariaLabelledBy}}\\n      @beforeOptionsComponent={{@beforeOptionsComponent}}\\n      @disabled={{@disabled}}\\n      @groupComponent={{@groupComponent}}\\n      @initiallyOpened={{@initiallyOpened}}\\n      @labelText={{@labelText}}\\n      @matchTriggerWidth={{@matchTriggerWidth}}\\n      @noMatchesMessage={{@noMatchesMessage}}\\n      @onChange={{@onChange}}\\n      @onInput={{@onInput}}\\n      @options={{@options}}\\n      @placeholder={{@placeholder}}\\n      @renderInPlace={{true}}\\n      @resultCountMessage={{@resultCountMessage}}\\n      @search={{@search}}\\n      @searchEnabled={{@searchEnabled}}\\n      @searchPlaceholder={{@searchPlaceholder}}\\n      @selected={{@selected}}\\n      @verticalPosition={{@verticalPosition}}\\n      ...attributes\\n      as |option|\\n    >\\n      {{option}}\\n    </PowerSelectMultiple>\\n  {{/if}}\\n</div>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { assert } from '@ember/debug';\n\nexport const SELECTION_TYPES = ['single', 'multiple'];\n\nexport default class HdsSuperSelectIndexComponent extends Component {\n  // UNCOMMENT THIS IF YOU NEED A CONSTRUCTOR\n  // constructor() {\n  //   super(...arguments);\n  //   // ADD YOUR ASSERTIONS HERE\n  // }\n\n  /**\n   * Get selection type\n   * @method selectionType\n   * @return {string} The selection type.\n   */\n  get selectionType() {\n    let { selectionType = 'single' } = this.args;\n\n    assert(\n      `@selectionType for \"Hds::SuperSelect\" must be one of the following: ${SELECTION_TYPES.join(\n        ', '\n      )}; received: ${selectionType}`,\n      SELECTION_TYPES.includes(selectionType)\n    );\n\n    return selectionType;\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @method classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames() {\n    let classes = ['hds-super-select'];\n\n    // add a class based on the @matchTriggerWidth argument\n    if (this.args.matchTriggerWidth === false) {\n      classes.push('hds-super-select--match-trigger-width-false');\n    }\n\n    return classes.join(' ');\n  }\n}\n"],"names":["SELECTION_TYPES","HdsSuperSelectIndexComponent","Component","selectionType","args","assert","join","includes","classNames","classes","matchTriggerWidth","push","setComponentTemplate","TEMPLATE"],"mappings":";;;;;AACA,eAAe,kBAAkB,CAAC,s4EAAs4E;;ACDx6E;AACA;AACA;AACA;;MAKaA,eAAe,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAC;AAEtC,MAAMC,4BAA4B,SAASC,SAAS,CAAC;AAClE;AACA;AACA;AACA;AACA;;AAEA;AACF;AACA;AACA;AACA;EACE,IAAIC,aAAaA,GAAG;IAClB,IAAI;AAAEA,MAAAA,aAAa,GAAG,QAAA;KAAU,GAAG,IAAI,CAACC,IAAI,CAAA;AAE5CC,IAAAA,MAAM,CACH,CAAsEL,oEAAAA,EAAAA,eAAe,CAACM,IAAI,CACzF,IACF,CAAE,CAAA,YAAA,EAAcH,aAAc,CAAA,CAAC,EAC/BH,eAAe,CAACO,QAAQ,CAACJ,aAAa,CACxC,CAAC,CAAA;AAED,IAAA,OAAOA,aAAa,CAAA;AACtB,GAAA;;AAEA;AACF;AACA;AACA;AACA;EACE,IAAIK,UAAUA,GAAG;AACf,IAAA,IAAIC,OAAO,GAAG,CAAC,kBAAkB,CAAC,CAAA;;AAElC;AACA,IAAA,IAAI,IAAI,CAACL,IAAI,CAACM,iBAAiB,KAAK,KAAK,EAAE;AACzCD,MAAAA,OAAO,CAACE,IAAI,CAAC,6CAA6C,CAAC,CAAA;AAC7D,KAAA;AAEA,IAAA,OAAOF,OAAO,CAACH,IAAI,CAAC,GAAG,CAAC,CAAA;AAC1B,GAAA;AACF,CAAA;AAACM,oBAAA,CAAAC,QAAA,EAxCoBZ,4BAA4B,CAAA;;;;"}