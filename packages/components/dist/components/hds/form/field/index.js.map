{"version":3,"file":"index.js","sources":["../../../../../src/components/hds/form/field/index.hbs","../../../../../src/components/hds/form/field/index.js"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{! @glint-nocheck: not typesafe yet }}\\n{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n<div class={{this.classNames}} {{did-insert this.setAriaDescribedBy}} ...attributes>\\n  {{yield\\n    (hash\\n      Label=(component\\n        \\\"hds/form/label\\\"\\n        controlId=this.id\\n        isRequired=this.isRequired\\n        isOptional=this.isOptional\\n        contextualClass=\\\"hds-form-field__label\\\"\\n      )\\n    )\\n  }}\\n  {{yield\\n    (hash\\n      HelperText=(component\\n        \\\"hds/form/helper-text\\\"\\n        controlId=this.id\\n        onInsert=this.appendDescriptor\\n        contextualClass=\\\"hds-form-field__helper-text\\\"\\n      )\\n    )\\n  }}\\n  <div class=\\\"hds-form-field__control\\\">\\n    {{yield\\n      (hash Control=(component \\\"hds/yield\\\") id=this.id labelId=this.labelId ariaDescribedBy=this.ariaDescribedBy)\\n    }}\\n  </div>\\n  {{yield\\n    (hash\\n      CharacterCount=(component\\n        \\\"hds/form/character-count\\\"\\n        controlId=this.id\\n        onInsert=this.appendDescriptor\\n        contextualClass=\\\"hds-form-field__character-count\\\"\\n      )\\n    )\\n  }}\\n  {{yield\\n    (hash\\n      Error=(component\\n        \\\"hds/form/error\\\" controlId=this.id onInsert=this.appendDescriptor contextualClass=\\\"hds-form-field__error\\\"\\n      )\\n    )\\n  }}\\n</div>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport { assert } from '@ember/debug';\nimport { action } from '@ember/object';\nimport { schedule } from '@ember/runloop';\nimport { getElementId } from '../../../../utils/hds-get-element-id';\nimport { setAriaDescribedBy } from '../../../../utils/hds-set-aria-described-by';\n\nexport const LAYOUT_TYPES = ['vertical', 'flag'];\n\nexport default class HdsFormFieldIndexComponent extends Component {\n  @tracked ariaDescribedBy = this.args.extraAriaDescribedBy;\n  @tracked descriptors = [];\n\n  @action\n  appendDescriptor(element) {\n    this.descriptors.push(element.id);\n  }\n\n  @action\n  setAriaDescribedBy() {\n    // we schedule this afterRender to capture all descriptors registered onInsert\n    schedule('afterRender', () => {\n      setAriaDescribedBy(this);\n    });\n  }\n\n  /**\n   * Sets the layout of the field\n   *\n   * @param layout\n   * @type {string}\n   */\n  get layout() {\n    let { layout } = this.args;\n\n    assert(\n      `@layout for \"Hds::Form::Field\" must be one of the following: ${LAYOUT_TYPES.join(\n        ', '\n      )}; received: ${layout}`,\n      LAYOUT_TYPES.includes(layout)\n    );\n\n    return layout;\n  }\n\n  /**\n   * Calculates the unique ID to assign to the form control\n   */\n  get id() {\n    return getElementId(this);\n  }\n\n  /**\n   * Returns the label id for the form control\n   */\n  get labelId() {\n    return `label-${this.id}`;\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @method classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames() {\n    let classes = [];\n\n    if (this.args.layout) {\n      classes.push(`hds-form-field--layout-${this.layout}`);\n    }\n\n    // add a class based on the @contextualClass argument\n    // notice: this will *not* be documented for public use\n    if (this.args.contextualClass) {\n      classes.push(this.args.contextualClass);\n    }\n\n    return classes.join(' ');\n  }\n\n  /**\n   * @param isRequired\n   * @type {boolean}\n   * @default false\n   */\n  get isRequired() {\n    return this.args.isRequired || false;\n  }\n\n  /**\n   * @param isOptional\n   * @type {boolean}\n   * @default false\n   */\n  get isOptional() {\n    return this.args.isOptional || false;\n  }\n}\n"],"names":["LAYOUT_TYPES","HdsFormFieldIndexComponent","_class","Component","constructor","args","_initializerDefineProperty","_descriptor","_descriptor2","appendDescriptor","element","descriptors","push","id","setAriaDescribedBy","schedule","layout","assert","join","includes","getElementId","labelId","classNames","classes","contextualClass","isRequired","isOptional","_applyDecoratedDescriptor","prototype","tracked","configurable","enumerable","writable","initializer","extraAriaDescribedBy","action","Object","getOwnPropertyDescriptor","setComponentTemplate","TEMPLATE"],"mappings":"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"}